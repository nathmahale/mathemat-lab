name: mathemat-lab-gh-workflow

on:
  push:
    branches: [ "dev" ]
    paths-ignore:
      - azuredevops/**
      - archive/**
      - LICENSE
      - README.md
      - .github/workflows/ado-agent-image-build.yml
  pull_request:
    branches: [ "master" ]

jobs:
  npmLocalBuildJob:
    if: |
      github.event.head_commit.message != 'test' &&
      github.event.head_commit.message != 'cosmetic changes' && 
      github.event.head_commit.message != 'code fmt'
    name: npmLocalBuildJob
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [20.x]

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup git Config locally on Github Runner
      run: |
        git config --global user.email "gh.actions@github.com"
        git config --global user.name "GH Actions User"
    
    - name: Local Test Build
      run: |
        npm config set fund false --location=global  
        npm update
        npm install --package-lock
        npm ls
        
    - name: Run build script
      run: |
        npm run build
        
    - name: Run Test script
      run: |
        npm test
    
    - name: Run tests
      run: |
        npx jest --coverage --detectOpenHandles --forceExit

    - name: Upload results to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Auto commit task
      uses: stefanzweifel/git-auto-commit-action@v6
      with:
        commit_message: Apply automatic changes
        branch: ${{ github.head_ref }}
        commit_options: '--no-verify --signoff'
        file_pattern: 'src/\*.js tests/*.js lib/routers/*.js'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Bump up package version based on commit message prefix
      run: |
        GIT_COMMIT_MESSAGE=$(git log -1 --format=%s)
        if [[ ${GIT_COMMIT_MESSAGE} == "major:"* ]]; then
          grunt bump:major
        elif [[ ${GIT_COMMIT_MESSAGE} == "minor:"* ]]; then
          grunt bump:minor
        elif [[ ${GIT_COMMIT_MESSAGE} == "patch:"* ]]; then
          grunt bump:patch
        else
          echo "[ INFO ] No version updates required"
        fi
        
    - name: Clean-up devDependencies
      run: |
        npm prune --production
        npm pkg fix

    - name: Publish NPM package to npmjs.com
      uses: JS-DevTools/npm-publish@v3
      with:
        token: ${{ secrets.NPM_REPO_ACCESS_TOKEN }}
        provenance: true
        access: public
        ignore-scripts: true

  dockerBuildAndPushJob:
    if: |
      github.event.head_commit.message != 'test' &&
      github.event.head_commit.message != 'cosmetic changes' &&
      github.event.head_commit.message != 'code fmt'
    name: dockerBuildAndPushJob
    runs-on: ubuntu-latest
    needs: npmLocalBuildJob
    timeout-minutes: 30
    
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Load Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/calculator-example-app
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Scrape build info
        id: vars
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "COMMIT_SHORT_SHA=${GITHUB_SHA:0:6}" >> $GITHUB_ENV
        
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          no-cache: true
          tags: ${{ secrets.DOCKER_USERNAME }}/calculator-example-app:scm-sha-${{ env.COMMIT_SHORT_SHA }}, ${{ secrets.DOCKER_USERNAME }}/calculator-example-app:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_VERSION_TAG=${{ env.RELEASE_VERSION }}
            GIT_COMMIT_MESSAGE=${{ github.event.head_commit.message }}
            GIT_VERSION_HASH=${{ github.sha }}